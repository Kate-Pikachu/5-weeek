1. Почему класс std::string имеет много перегруженных функций - членов?
std::string - специализация basic_string под char:
using string = basic_string<T> 

 std::string работают с индексами, строками, С-строками, итераторами, поэтому имеет много перегруженных функций - членов.

2. Как осуществляется интернационализация (i18n) и локализация (l10n) программы?

локализация - пернос реалий программы на реалии страны.
Используется локаль - объект локального контекста - она передается потокам, которые корректируют ввод/вывод по ней.
   куда переводить - порядок аспектов, относящихся к одной культуре
	- порядок символов		|
	- кодировка			|
	- часовой пояс			|
	- валюта			|
	- единицы измерения 		|    это все - фасеты - пункты из которых складывается локаль


[язык_часовая зона.код@модификаторы] 

класс <locale> - объект отвечает за всю локализацию и за все фасеты


3. Чем отличаются многобайтовые кодировки от широких кодировок?

Многобайтовые кодировки -  компактнее, применяется для хранения данных; переменное количество байт
Широкие кодировки - удобнее, используется в программах; постоянное количество байт


4. Какие компоненты входят в стандарт кодирования символов Unicode?

US-ASCII - 7 бит - первая кодировка для латиницы
ISO - 8 бит - используется в западной европе
UTF - 8, 16, 32 бит - самая популярная кодировка для всемирной паутины
WIN 1251 - кодировка виндовса


5. Для решения каких задач удобно использовать регулярные выражения?

библиотека <regex>
Задача: дан текст, нужно найти фрагмент, удовлетворяющий определеннойму паттерну (регулярному выражению)
То есть нужно найти подстроку в тексте. Можно применять для выделения адресов, телефонов и т.д. , а также для производных задач

